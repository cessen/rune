Lexer:
	//- Figure out what unique token types you need
	//- Add those token types to the lexer
	//- Change tokens to index into a big string of the file contents instead
	//  of storing their own heap-allocated strings.
	//- Have tokens store their line and column number from the source file
	- Add unit tests for the lexer

Parser:
	//- Figure out the basic classes and structures of your ast
	//- Write a basic recursive descent parser just for basic expressions
	//- Write a recursive descent parser for expression sequences
	//- Write a recursive descent parser for expressions that handles bracketed function calls
	//- Write a recursive descent parser that handles prefix and infix function calls
	//- Write a recursive descent parser that handles variable declaration
	- Clean up code to reduce redundant code.  Could be waaaay DRYer.
	
Code generation:
	- Write a code generator (...?) that generates C